name: "tauri build"
on:
  workflow_dispatch:
  push:
    branches:
      - "tauri"

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: clone analyse rs
      run: |
        git clone -b tauri https://github.com/WesleyCh3n/analyze-rs ../analyze-rs
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Cache cargo registry
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/registry
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
          ${{ matrix.platform }}-stable-cargo-registry-
    - name: Cache cargo index
      uses: actions/cache@v2.1.4
      with:
        path: ~/.cargo/git
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('**/Cargo.toml') }}
          ${{ matrix.platform }}-stable-cargo-index-
    - name: Cache core cargo target
      uses: actions/cache@v2
      with:
        path: target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('core/**/Cargo.toml') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('core/**/Cargo.toml') }}
          ${{ matrix.platform }}-stable-cargo-core-
    - name: Cache CLI cargo target
      uses: actions/cache@v2
      with:
        path: tooling/cli.rs/target
        # Add date to the cache to keep it up to date
        key: ${{ matrix.platform }}-stable-cargo-cli-${{ hashFiles('tooling/cli.rs/Cargo.lock') }}-${{ env.CURRENT_DATE }}
        # Restore from outdated cache for speed
        restore-keys: |
          ${{ matrix.platform }}-stable-cargo-cli-${{ hashFiles('tooling/cli.rs/Cargo.lock') }}
          ${{ matrix.platform }}-stable-cargo-cli-

    - name: install dependencies (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
    - name: install app dependencies and build it
      run: yarn && yarn build
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "App v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: true
